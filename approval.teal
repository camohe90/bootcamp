#pragma version 8
intcblock 0 1
bytecblock 0x151f7c75 0x6e616d65 0x46616c7365 0x54727565 0x41 0x42 0x42207761732073656c6563746564 0x41207761732073656c6563746564
txn NumAppArgs
intc_0 // 0
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x89559b09 // "set_name(string)void"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x4294948f // "get_name()string"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x3b08067a // "hello_name(string)string"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x774e2c9d // "hello_sender()address"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x9eaa46dc // "if_condition()string"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xc8c37d99 // "cond_expression(string)string"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x5e9882be // "seq_expression(string)string"
==
bnz main_l9
err
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub seqexpression_7
store 12
bytec_0 // 0x151f7c75
load 12
concat
log
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub condexpression_6
store 9
bytec_0 // 0x151f7c75
load 9
concat
log
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub ifcondition_5
store 7
bytec_0 // 0x151f7c75
load 7
concat
log
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hellosender_4
store 5
bytec_0 // 0x151f7c75
load 5
concat
log
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub helloname_3
store 2
bytec_0 // 0x151f7c75
load 2
concat
log
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getname_2
store 0
bytec_0 // 0x151f7c75
load 0
concat
log
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub setname_1
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l18
err
main_l18:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
intc_1 // 1
return

// set_name
setname_1:
store 15
bytec_1 // "name"
load 15
extract 2 0
app_global_put
retsub

// get_name
getname_2:
bytec_1 // "name"
app_global_get
store 1
load 1
len
itob
extract 6 0
load 1
concat
store 1
load 1
retsub

// hello_name
helloname_3:
store 3
pushbytes 0x48656c6c6f20 // "Hello "
load 3
extract 2 0
concat
store 4
load 4
len
itob
extract 6 0
load 4
concat
store 4
load 4
retsub

// hello_sender
hellosender_4:
txn Sender
store 6
load 6
len
pushint 32 // 32
==
assert
load 6
retsub

// if_condition
ifcondition_5:
intc_1 // 1
intc_0 // 0
>
bnz ifcondition_5_l2
bytec_2 // "False"
store 8
load 8
len
itob
extract 6 0
load 8
concat
store 8
b ifcondition_5_l3
ifcondition_5_l2:
bytec_3 // "True"
store 8
load 8
len
itob
extract 6 0
load 8
concat
store 8
ifcondition_5_l3:
load 8
retsub

// cond_expression
condexpression_6:
store 10
load 10
extract 2 0
bytec 4 // "A"
==
bnz condexpression_6_l4
load 10
extract 2 0
bytec 5 // "B"
==
bnz condexpression_6_l3
err
condexpression_6_l3:
bytec 6 // "B was selected"
store 11
load 11
len
itob
extract 6 0
load 11
concat
store 11
b condexpression_6_l5
condexpression_6_l4:
bytec 7 // "A was selected"
store 11
load 11
len
itob
extract 6 0
load 11
concat
store 11
condexpression_6_l5:
load 11
retsub

// seq_expression
seqexpression_7:
store 13
intc_1 // 1
intc_0 // 0
>
bnz seqexpression_7_l7
bytec_2 // "False"
store 14
load 14
len
itob
extract 6 0
load 14
concat
store 14
seqexpression_7_l2:
load 13
extract 2 0
bytec 4 // "A"
==
bnz seqexpression_7_l6
load 13
extract 2 0
bytec 5 // "B"
==
bnz seqexpression_7_l5
err
seqexpression_7_l5:
bytec 6 // "B was selected"
store 14
load 14
len
itob
extract 6 0
load 14
concat
store 14
b seqexpression_7_l8
seqexpression_7_l6:
bytec 7 // "A was selected"
store 14
load 14
len
itob
extract 6 0
load 14
concat
store 14
b seqexpression_7_l8
seqexpression_7_l7:
bytec_3 // "True"
store 14
load 14
len
itob
extract 6 0
load 14
concat
store 14
b seqexpression_7_l2
seqexpression_7_l8:
load 14
retsub